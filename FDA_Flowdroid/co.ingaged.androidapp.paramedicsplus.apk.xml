<?xml version="1.0" encoding="UTF-8"?><DataFlowResults FileFormatVersion="102" TerminationState="DataFlowOutOfMemory"><Results><Result><Sink Statement="virtualinvoke $r1.&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;(&quot;android:support:fragments&quot;, $r2)" Method="&lt;androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)&gt;"><AccessPath Value="$r2" Type="androidx.fragment.app.FragmentManagerState" TaintSubFields="true"><Fields><Field Value="&lt;androidx.fragment.app.FragmentManagerState: int[] mAdded&gt;" Type="int[]"></Field></Fields></AccessPath></Sink><Sources><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.fragment.app.Fragment$2: android.view.View onFindViewById(int)&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="virtualinvoke $r1.&lt;android.content.IntentFilter: void addAction(java.lang.String)&gt;(&quot;android.intent.action.TIME_TICK&quot;)" Method="&lt;androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()&gt;"><AccessPath Value="$r1" Type="android.content.IntentFilter" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i1)" Method="&lt;com.mikepenz.materialdrawer.DrawerBuilder: void createContent()&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="specialinvoke r0.&lt;androidx.core.app.ComponentActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)" Method="&lt;androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)&gt;"><AccessPath Value="r0" Type="co.ingaged.androidcore.view.HomeActivity" TaintSubFields="true"><Fields><Field Value="&lt;co.ingaged.androidcore.view.HomeActivity: android.view.View mMessagesActionView&gt;" Type="android.view.View"></Field></Fields></AccessPath></Sink><Sources><Source Statement="$r4 = virtualinvoke $r4.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;co.ingaged.androidcore.view.HomeActivity: boolean onCreateOptionsMenu(android.view.Menu)&gt;"><AccessPath Value="$r4" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i1)" Method="&lt;com.mikepenz.materialdrawer.DrawerBuilder: void createContent()&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r4 = virtualinvoke $r4.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;co.ingaged.androidcore.view.HomeActivity: boolean onCreateOptionsMenu(android.view.Menu)&gt;"><AccessPath Value="$r4" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="$r2 = virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r3)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="$r3" Type="android.content.ComponentName" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="r0" Type="androidx.core.app.NotificationManagerCompat$SideChannelManager" TaintSubFields="true"><Fields><Field Value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext&gt;" Type="co.ingaged.androidcore.view.login.LoginActivity"></Field><Field Value="&lt;co.ingaged.androidcore.view.login.LoginActivity: android.widget.TextView mSelectTenantView&gt;" Type="android.widget.TextView"></Field></Fields></AccessPath></Sink><Sources><Source Statement="$r5 = virtualinvoke r0.&lt;co.ingaged.androidcore.view.login.LoginActivity: android.view.View findViewById(int)&gt;($i0)" Method="&lt;co.ingaged.androidcore.view.login.LoginActivity: void onCreate(android.os.Bundle)&gt;"><AccessPath Value="$r5" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r12)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r12" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r6)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="$r6" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="virtualinvoke $r5.&lt;android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)&gt;($r2, $r1)" Method="&lt;androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()&gt;"><AccessPath Value="$r1" Type="android.content.IntentFilter" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i1)" Method="&lt;com.mikepenz.materialdrawer.DrawerBuilder: void createContent()&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int v(java.lang.String,java.lang.String)&gt;(&quot;FragmentManager&quot;, $r7)" Method="&lt;androidx.fragment.app.FragmentManagerImpl: int allocBackStackIndex(androidx.fragment.app.BackStackRecord)&gt;"><AccessPath Value="$r7" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.fragment.app.FragmentActivity: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.fragment.app.Fragment$2: android.view.View onFindViewById(int)&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r0, 33)" Method="&lt;androidx.browser.customtabs.CustomTabsClient: boolean bindCustomTabsService(android.content.Context,java.lang.String,androidx.browser.customtabs.CustomTabsServiceConnection)&gt;"><AccessPath Value="$r0" Type="androidx.browser.customtabs.CustomTabsServiceConnection" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r2 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i1)" Method="&lt;com.mikepenz.materialdrawer.DrawerBuilder: void createContent()&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r7 = virtualinvoke $r7.&lt;android.view.View: android.view.View findViewById(int)&gt;(16908290)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void &lt;init&gt;(android.app.Activity,boolean)&gt;"><AccessPath Value="$r7" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r6 = virtualinvoke $r7.&lt;android.view.ViewGroup: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()&gt;"><AccessPath Value="$r6" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="virtualinvoke $r0.&lt;java.io.ByteArrayOutputStream: void write(byte[],int,int)&gt;($r2, 0, $i0)" Method="&lt;com.amazonaws.util.IOUtils: byte[] toByteArray(java.io.InputStream)&gt;"><AccessPath Value="$r2" Type="byte[]" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;java.net.HttpURLConnection: java.io.InputStream getInputStream()&gt;()" Method="&lt;com.amazonaws.http.UrlHttpClient: com.amazonaws.http.HttpResponse createHttpResponse(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection)&gt;"><AccessPath Value="$r6" Type="java.io.InputStream" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r12)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r12" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int v(java.lang.String,java.lang.String)&gt;(&quot;FragmentManager&quot;, $r6)" Method="&lt;androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)&gt;"><AccessPath Value="$r6" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r2 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r7 = virtualinvoke $r7.&lt;android.view.View: android.view.View findViewById(int)&gt;(16908290)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void &lt;init&gt;(android.app.Activity,boolean)&gt;"><AccessPath Value="$r7" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result></Results><PerformanceData><PerformanceEntry Name="CallgraphConstructionSeconds" Value="49"></PerformanceEntry><PerformanceEntry Name="TaintPropagationSeconds" Value="116"></PerformanceEntry><PerformanceEntry Name="PathReconstructionSeconds" Value="5"></PerformanceEntry><PerformanceEntry Name="TotalRuntimeSeconds" Value="172"></PerformanceEntry><PerformanceEntry Name="MaxMemoryConsumption" Value="3894"></PerformanceEntry><PerformanceEntry Name="SourceCount" Value="66"></PerformanceEntry><PerformanceEntry Name="SinkCount" Value="292"></PerformanceEntry></PerformanceData></DataFlowResults>