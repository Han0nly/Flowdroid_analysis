<?xml version="1.0" encoding="UTF-8"?><DataFlowResults FileFormatVersion="102" TerminationState="DataFlowOutOfMemory"><Results><Result><Sink Statement="staticinvoke &lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r12)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r12" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r6)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="$r6" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="r0" Type="androidx.core.app.NotificationManagerCompat$SideChannelManager" TaintSubFields="true"><Fields><Field Value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext&gt;" Type="com.colorimetrix.pearl.ui.activities.MainActivity"></Field></Fields></AccessPath></Sink><Sources><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r4 = virtualinvoke r0.&lt;androidx.fragment.app.FragmentActivity: android.view.View findViewById(int)&gt;($i0)" Method="&lt;com.colorimetrix.pearl.ui.activities.MainActivity: android.view.View _$_findCachedViewById(int)&gt;"><AccessPath Value="$r4" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r12)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r12" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;(&quot;NotificationHelper&quot;, $r3)" Method="&lt;com.colorimetrix.helpers.NotificationHelper$Companion: void cancelNotification(android.content.Context,int)&gt;"><AccessPath Value="$r3" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r4 = virtualinvoke r0.&lt;androidx.fragment.app.FragmentActivity: android.view.View findViewById(int)&gt;($i0)" Method="&lt;com.colorimetrix.pearl.ui.activities.MainActivity: android.view.View _$_findCachedViewById(int)&gt;"><AccessPath Value="$r4" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r6)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="$r6" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r12)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r12" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r6)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="$r6" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;NotifManCompat&quot;, $r6)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"><AccessPath Value="$r6" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)" Method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"><AccessPath Value="$r6" Type="java.util.List" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="virtualinvoke $r2.&lt;android.app.Activity: void setResult(int,android.content.Intent)&gt;(0, $r1)" Method="&lt;com.journeyapps.barcodescanner.CaptureManager: void returnResultTimeout()&gt;"><AccessPath Value="$r2" Type="android.app.Activity" TaintSubFields="true"><Fields><Field Value="&lt;androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources&gt;" Type="androidx.appcompat.widget.VectorEnabledTintResources"></Field><Field Value="&lt;androidx.appcompat.widget.VectorEnabledTintResources: java.lang.ref.WeakReference mContextRef&gt;" Type="java.lang.ref.WeakReference"></Field><Field Value="&lt;java.lang.ref.Reference: java.lang.Object referent&gt;" Type="com.colorimetrix.pearl.ui.activities.RegistrationActivity"></Field></Fields></AccessPath></Sink><Sources><Source Statement="$r2 = virtualinvoke r0.&lt;com.colorimetrix.pearl.ui.activities.RegistrationActivity: android.view.View findViewById(int)&gt;(2131296339)" Method="&lt;com.colorimetrix.pearl.ui.activities.RegistrationActivity: void onCreate(android.os.Bundle)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int v(java.lang.String,java.lang.String)&gt;(&quot;FragmentManager&quot;, $r3)" Method="&lt;androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)&gt;"><AccessPath Value="$r3" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r1 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r1" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r7 = virtualinvoke $r7.&lt;android.view.View: android.view.View findViewById(int)&gt;(16908290)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void &lt;init&gt;(android.app.Activity,boolean)&gt;"><AccessPath Value="$r7" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.fragment.app.FragmentActivity: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r2.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r6 = virtualinvoke $r7.&lt;android.view.ViewGroup: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()&gt;"><AccessPath Value="$r6" Type="android.view.View" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = virtualinvoke $r1.&lt;android.view.View: android.view.View findViewById(int)&gt;($i0)" Method="&lt;androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)&gt;"><AccessPath Value="$r2" Type="android.view.View" TaintSubFields="true"></AccessPath></Source></Sources></Result></Results><PerformanceData><PerformanceEntry Name="CallgraphConstructionSeconds" Value="33"></PerformanceEntry><PerformanceEntry Name="TaintPropagationSeconds" Value="133"></PerformanceEntry><PerformanceEntry Name="PathReconstructionSeconds" Value="5"></PerformanceEntry><PerformanceEntry Name="TotalRuntimeSeconds" Value="173"></PerformanceEntry><PerformanceEntry Name="MaxMemoryConsumption" Value="3968"></PerformanceEntry><PerformanceEntry Name="SourceCount" Value="65"></PerformanceEntry><PerformanceEntry Name="SinkCount" Value="259"></PerformanceEntry></PerformanceData></DataFlowResults>